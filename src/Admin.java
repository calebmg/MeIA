import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.Key;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.nio.file.*;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import java.io.File;
import java.io.IOException;
import java.io.*;
import java.net.URL;
import java.time.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public final class Admin extends javax.swing.JFrame {


   
   
    public Admin()  {
        
        initComponents();
      this.setLocationRelativeTo(null);
      Ingreso nuevo = new Ingreso();
      TextUsuario.setText(Ingreso.Usuario);
      TextNombre.setText(Ingreso.Nombre);
      TextApellido.setText(Ingreso.Apellido);
      TextoContraseña.setText(Ingreso.Contraseña);
      ComboDia.setSelectedItem(Ingreso.Dia);
      ComboMes.setSelectedItem(Ingreso.Mes);
      Comboaño.setSelectedItem(Ingreso.Año);
      TextCorreo.setText(Ingreso.Correo);
      TextTelefono.setText(Ingreso.Telefono);
      TextDescripcion.setText(Ingreso.Descripcion);
      JFoto.setIcon(new ImageIcon(Ingreso.Ruta));
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.6512
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        F = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TextUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ComboDia = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        ComboMes = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        Comboaño = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TextCorreo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TextTelefono = new javax.swing.JTextField();
        BotonInsertar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextDescripcion = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        TextoContraseña = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        DireccionFotograficaLabel = new javax.swing.JLabel();
        F2 = new javax.swing.JLabel();
        BotonBack = new javax.swing.JButton();
        CrearUs = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        JFoto = new javax.swing.JLabel();
        BotonDonaciones = new javax.swing.JButton();
        btnRepMateriales = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        F.setText("jLabel14");

        jLabel1.setText("Usuario");

        TextUsuario.setEditable(false);

        jLabel2.setText("Nombre");

        TextNombre.setEditable(false);

        jLabel3.setText("Apellido");

        TextApellido.setEditable(false);

        jLabel4.setText("Contraseña");

        jLabel5.setText("Dia");

        ComboDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        ComboDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDiaActionPerformed(evt);
            }
        });

        jLabel6.setText("Mes");

        ComboMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        ComboMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboMesActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha de nacimiento:");

        Comboaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", " " }));

        jLabel8.setText("Año");

        jLabel9.setText("Correo electronico");

        jLabel10.setText("Descripcion");

        BotonInsertar.setText("Insertar");
        BotonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInsertarActionPerformed(evt);
            }
        });

        TextDescripcion.setColumns(20);
        TextDescripcion.setRows(5);
        jScrollPane1.setViewportView(TextDescripcion);

        jLabel11.setText("Telefono");

        TextoContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoContraseñaActionPerformed(evt);
            }
        });

        jButton1.setText("Ingresar Foto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Foto guardada en:");

        jLabel13.setText("Direccion Fotografia:");

        DireccionFotograficaLabel.setText("\"");

        BotonBack.setText("Backup");
        BotonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBackActionPerformed(evt);
            }
        });

        CrearUs.setText("Crear usuario");
        CrearUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearUsActionPerformed(evt);
            }
        });

        jButton2.setText("Agregar Material");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        BotonDonaciones.setText("Donar");
        BotonDonaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDonacionesActionPerformed(evt);
            }
        });

        btnRepMateriales.setText("Generar reporte Materiales");
        btnRepMateriales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepMaterialesActionPerformed(evt);
            }
        });

        jButton3.setText("Generar reporte Donaciones");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(405, 405, 405)
                                .addComponent(jLabel12))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboDia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboMes, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Comboaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextoContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(F2))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DireccionFotograficaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BotonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CrearUs, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(BotonInsertar)
                                        .addGap(18, 18, 18)
                                        .addComponent(BotonDonaciones)))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRepMateriales)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3))))
                        .addGap(0, 51, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(JFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(TextUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(TextoContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addComponent(F2)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(TextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jButton1))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(TextApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel13)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(DireccionFotograficaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComboDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Comboaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonBack)
                            .addComponent(CrearUs)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(BotonInsertar)
                    .addComponent(BotonDonaciones)
                    .addComponent(btnRepMateriales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private static final String ALGO = "AES";
    
    private byte[] keyValue;
    
    public void AESLlave(String llave)
    {
        keyValue = llave.getBytes();
    }
    
    private Key generarLlave() throws Exception
    {
        Key key = new SecretKeySpec(keyValue, ALGO);
        return key;
    }
    
    public String Codificar(String contraseña) throws Exception
    {
        Key key = generarLlave();
        Cipher c = Cipher.getInstance(ALGO);
        c.init(Cipher.ENCRYPT_MODE, key);
        byte[] encVal = c.doFinal(contraseña.getBytes());
        String contraseñaEncriptada = Base64.getEncoder().encodeToString(encVal);
        return contraseñaEncriptada;
    }
    
    public String Decodificar(String contraseñaEncriptada) throws Exception
    {
        Key key = generarLlave();
        Cipher c = Cipher.getInstance(ALGO);
        c.init(Cipher.DECRYPT_MODE, key);
        byte[] decordedValue = Base64.getDecoder().decode(contraseñaEncriptada);
        byte[] decValue = c.doFinal(decordedValue);
        String ContraseñaDescifrada = new String(decValue);
        return ContraseñaDescifrada;
    }
    
    public boolean NivelSeguridad(String contraseña) throws FileNotFoundException, IOException
    {
        // <editor-fold defaultstate="collapsed" desc="Leer documentos de seguridad">
        int[] puntuacion = new int[8];
        String pathPuntuacion = "C:\\MEIA\\ArchivosSeguridad\\puntuacion.txt";
        FileReader archivoPuntuacion = new FileReader(pathPuntuacion);
        BufferedReader br = new BufferedReader(archivoPuntuacion);
        String cadena;
        int posicion = 0;
        while((cadena = br.readLine()) != null)
        {
            puntuacion[posicion] = Integer.parseInt(cadena);
            posicion++;
        }
        String pathResultado = "C:\\MEIA\\ArchivosSeguridad\\resultado.txt";
        FileReader archivoResultado = new FileReader(pathResultado);
        BufferedReader br2 = new BufferedReader(archivoResultado);
        String cadena2;
        int posicion2 = 0;
        String[] resultadoRango = new String[4];
        while((cadena2 = br2.readLine()) != null)
        {
            resultadoRango[posicion2] = cadena2;
            posicion2++;
        }
        int[] rangos = new int[8];
        int contador = 0;
        for(int i = 0; i < 8; i+= 2)
        {
            String[] partes = resultadoRango[contador].split(",");
            rangos[i] = Integer.parseInt(partes[0]);
            rangos[i+1] = Integer.parseInt(partes[1]);
            contador++;
        }
        
        int R1 = rangos[0];
        int R2 = rangos[1];
        int R3 = rangos[2];
        int R4 = rangos[3];
        int R5 = rangos[4];
        int R6 = rangos[5];
        int R7 = rangos[6];
        int R8 = rangos[7];
        // </editor-fold>
        
        int resultadoPuntuacion = 0;
        if(contraseña.length() >= puntuacion[0])
        {
            int cantMayusculas = 0;
            int cantNumeros = 0;
            int cantSimbolos = 0;
            int cantMinusculas = 0;
            resultadoPuntuacion = puntuacion[1] * contraseña.length();
            for(int i = 0; i < contraseña.length(); i++)
            {
                if(contraseña.charAt(i) >= 65 && contraseña.charAt(i) <= 90)
                    cantMayusculas++;
                else if(contraseña.charAt(i) >= 48 && contraseña.charAt(i) <= 57)
                    cantNumeros++;
                else if(contraseña.charAt(i) == 165)
                    cantMayusculas++;
                else if(contraseña.charAt(i) >= 97 && contraseña.charAt(i) <= 122)
                    cantMinusculas++;
                else if(contraseña.charAt(i) == 130)
                    cantMinusculas++;
                else if(contraseña.charAt(i) == 32){}
                else if(contraseña.charAt(i) >= 160 && contraseña.charAt(i) <= 164)
                    cantMinusculas++;
                else
                    cantSimbolos++;
            }
            resultadoPuntuacion = resultadoPuntuacion + puntuacion[2]*cantMayusculas;
            resultadoPuntuacion = resultadoPuntuacion + cantMayusculas + cantMinusculas + puntuacion[3];
            resultadoPuntuacion = resultadoPuntuacion + cantNumeros + puntuacion[4];
            resultadoPuntuacion = resultadoPuntuacion + (cantSimbolos*(contraseña.length() + puntuacion[5]));
            if(cantNumeros == 0)
                resultadoPuntuacion = resultadoPuntuacion - puntuacion[6];
            if((cantMayusculas + cantMinusculas) == 0)
                resultadoPuntuacion = resultadoPuntuacion - puntuacion[7];
            
            int nivelSeguridad = 0;
            if(nivelSeguridad >= R1 && nivelSeguridad <= R2)
                nivelSeguridad = 1;
            else if(nivelSeguridad >= R3 && nivelSeguridad <= R4)
                nivelSeguridad = 2;
            else if(nivelSeguridad >= R5 && nivelSeguridad <= R6)
                nivelSeguridad = 3;
            else if(nivelSeguridad >= R7 && nivelSeguridad <= R8)
                nivelSeguridad = 4;
            JOptionPane.showMessageDialog(null, "Su contraseña se encuentra en el nivel " + nivelSeguridad + " de seguridad");
            return true;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Su contraseña debe contener una cantidad mayor a " + puntuacion[0] + " caracteres");
            JOptionPane.showMessageDialog(null, "Su contraseña se encuentra en el nivel mas bajo de seguridad");
            return false;
        }
    }

    
    public int Cantidad_Max(String strPath,String strError)
    {
        int cant_max = 0;
        File Archivo = new File(strPath);
        
        if(Archivo.exists()==true)
        {
            FileReader LecturaArchivo;
            
            try {
                LecturaArchivo = new FileReader(Archivo);
                
                BufferedReader LeerArchivo = new BufferedReader(LecturaArchivo);
                
                String Linea="";
                try {
                    Linea=LeerArchivo.readLine();
                    String[] split;
                    
                    
                    while(Linea != null)
                    {
                        if(!"".equals(Linea))
                        {
                            split=Linea.split(":");
                            if(split[0].equals("Maximo_Registros"))
                            {
                                cant_max = Integer.parseInt(split[1]);
                                
                            }
                        }
                        Linea=LeerArchivo.readLine();
                    }
                    //Aqui ya se puede hacer comparaciones

                    LecturaArchivo.close();
                    LeerArchivo.close();
                    
                    strError="a";
                    return cant_max;
                    
                } catch (IOException ex) {
                    strError= ex.getMessage();
                    return cant_max;
                }
            } catch (FileNotFoundException ex) {
                strError= ex.getMessage();
                return cant_max;
            }            
        }
        else
        {
            
            return cant_max;
        }
        
        
    }
    public ArrayList<Usuario> Obtener_Datos_(String strPath,String strError)
    {
        ArrayList<Usuario> Usuarios = new ArrayList<Usuario>();
        File Archivo = new File(strPath);
        
        if(Archivo.exists()==true)
        {
            FileReader LecturaArchivo;
            
            try {
                LecturaArchivo = new FileReader(Archivo);
                
                BufferedReader LeerArchivo = new BufferedReader(LecturaArchivo);
                
                String Linea="";
                try {
                    Linea=LeerArchivo.readLine();
                    String[] Split;
                    
                    
                    while(Linea != null)
                    {
                        if(!"".equals(Linea))
                        {
                            Split=Linea.split(",");
                            Usuario user = new Usuario();
                            user.usuario = Split[0];
                            user.nombre = Split[1];
                            user.apellido = Split[2];
                            user.password = Split[3];
                            user.rol = Split[4];
                            user.Fecha_Nacimiento = Split[5];
                            user.correo_electronico = Split[6];
                            user.telefono = Split[7];
                            user.path_foto = Split[8];
                            user.Descripcion = Split[9];
                            user.status =  Split[10];
                            Usuarios.add(user);
                        }
                        Linea=LeerArchivo.readLine();
                    }
                    //Aqui ya se puede hacer comparaciones

                    LecturaArchivo.close();
                    LeerArchivo.close();
                    
                    strError="";
                    return Usuarios;
                    
                } catch (IOException ex) {
                    strError= ex.getMessage();
                    return Usuarios;
                }
            } catch (FileNotFoundException ex) {
                strError= ex.getMessage();
                return Usuarios;
            }            
        }
        else
        {
            
            return Usuarios;
        }
        
        
}
    
    public boolean Insertar()
    {
        ArrayList<Usuario> Index = Obtener_Datos_("C:\\MEIA\\Bitacora.txt","");
        int max = Cantidad_Max("C:\\MEIA\\desc_Bitacora.txt","");
        if(Index.size()<max)
        {
            return true;
        }
        else 
        {
            return false;
        }
        
    }
    public boolean Busqueda(String user)
    {
        File archivo = new File("C:\\MEIA\\Bitacora.txt","");
        File archivo2 = new File("C:\\MEIA\\Usuario.txt");
        
        if(archivo.exists() && !archivo2.exists())
        {
             ArrayList<Usuario> Index = Obtener_Datos_("C:\\MEIA\\Bitacora.txt","");
      
        if(!Index.isEmpty())
        {
            
            for (Usuario item : Index) 
                 {
                     if(item.usuario.equals(user))
                     {
                         return true;
                         
                     }
                 }
          
        }
        }else if(archivo.exists() && archivo2.exists())
        {
              ArrayList<Usuario> Archivo = Obtener_Datos_("C:\\MEIA\\Usuario.txt","");
               ArrayList<Usuario> Index = Obtener_Datos_("C:\\MEIA\\Bitacora.txt","");
        if(!Index.isEmpty()||!Archivo.isEmpty())
        {
            
            for (Usuario item : Index) 
                 {
                     if(item.usuario.equals(user))
                     {
                         return true;
                         
                     }
                 }
             for (Usuario item : Archivo) 
                 {
                     if(item.usuario.equals(user))
                     {
                         return true;
                         
                     }
                 }
          
        }
          
        }
        return false;
    }
    private void ComboDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDiaActionPerformed
     // TODO add your handling code here:
    }//GEN-LAST:event_ComboDiaActionPerformed

    public void Datos(Usuario user)
    {
    
    }
    private void ComboMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboMesActionPerformed

    private void BotonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInsertarActionPerformed
     Usuario user= new Usuario();
     user.usuario = TextUsuario.getText();
     user.nombre = TextNombre.getText();
     Date fecha = new Date();
     File file = new File("C:\\MEIA\\Bitacora.txt");
     FileWriter escritor;
     PrintWriter imprimir;
     String contraseña  =""; 
     contraseña = TextoContraseña.getText();
     try{
     if(NivelSeguridad(contraseña))
     {
   
    
          String origenPath = DireccionFotograficaLabel.getText();
                Path origen = Paths.get(origenPath);
       Path destino = Paths.get("C:\\MEIA\\Fotografia");
       
        try {
            Files.move(origen, destino.resolve(origen.getFileName()));
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Foto
        String pathFoto = "C:\\MEIA\\Imagenes\\" + origen.getFileName();
        
        String textoACifrar = TextoContraseña.getText();
        String contraseñaCodificada = "";
        try {
            //Llave debe de ser 16 caracteres
            AESLlave("1234567891234567");
            contraseñaCodificada = Codificar(textoACifrar);
            
        } catch (Exception ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
           
     if(!file.exists())
     {
         try{
             //Para insertar en bitacora
             file.createNewFile();
             escritor = new FileWriter(file,true);
             imprimir = new PrintWriter(escritor,true);
             imprimir.println(TextUsuario.getText()+","+TextNombre.getText()+","+TextApellido.getText()+","+
                     contraseñaCodificada+","+"Administrador"+","+ComboDia.getSelectedItem()+" "+ComboMes.getSelectedItem()+" "+
                     Comboaño.getSelectedItem()+","+TextTelefono.getText()+","+pathFoto+","+TextCorreo.getText()+","+TextDescripcion.getText()+","+"1");
                  
            
             //Creacion de descriptor
             File fileDesc = new File("C:\\MEIA\\Desc_Bitacora.txt");
             FileWriter escritor2 = new FileWriter(fileDesc,true);
             PrintWriter linea = new PrintWriter(escritor2);
             
             linea.println("Nombre:Bitacora.txt");
             linea.println("ArchivoRelacionado:Usuario.txt");
             linea.println("Fecha_Modificacion:"+fecha);
             linea.println("Creador:"+TextUsuario.getText());
             linea.println("Total_Registros:1");
             linea.println("Registros_Activos:1");
             linea.println("Registros_Inactivos:0");
             linea.println("Maximo_Registros:2");
             
             imprimir.close();
             escritor2.close();
             linea.close();
             escritor.close();
             
         }catch(IOException ex){ex.printStackTrace();}
         
         
     }
     else{
           try{
               
           
               if(Insertar())
               {
               
             escritor = new FileWriter(file,true);
             imprimir = new PrintWriter(escritor,true);         
             ArrayList<Usuario> escribir = Obtener_Datos_("C:\\MEIA\\Bitacora.txtMEIA/Bitacora.txt","");
             int _1_ = 0;
             int _2_ = 0;
              if(escribir.contains(user.usuario)){
                 int index = escribir.indexOf(user);
                 escribir.remove(index);
                 escribir.add(index, user);}
               imprimir.println(TextUsuario.getText()+","+TextNombre.getText()+","+TextApellido.getText()+","+
                     contraseñaCodificada+","+"Usuario"+","+ComboDia.getSelectedItem()+" "+ComboMes.getSelectedItem()+" "+
                     Comboaño.getSelectedItem()+","+TextTelefono.getText()+","+pathFoto+","+TextCorreo.getText()+","+TextDescripcion.getText()+","+"1");
                      escritor.close();
                      imprimir.close();
             String admin = "";
                 for (Usuario item : escribir) 
                 {
                      if(item.rol.equals("Administrador"))
                     {
                         admin = item.usuario;
                     }
                if(item.status.equals("1"))
                {
                   _1_++;
               
                }
                else
                {
                    _2_++;
                }
                 }
                 ArrayList<Usuario> escribir_U = Obtener_Datos_("C:\\MEIA\\Usuario.txt","");
                 for (Usuario item : escribir_U) 
                 {
                     if(item.rol.equals("Administrador"))
                     {
                         admin = item.usuario;
                     }
                 }
                 File fileDesc = new File("C:\\MEIA\\Desc_Bitacora.txt");
             FileWriter escritor2 = new FileWriter(fileDesc);
             PrintWriter linea = new PrintWriter(escritor2);
             
             linea.println("Nombre:Bitacora.txt");
             linea.println("ArchivoRelacionado:Usuario.txt");
             linea.println("Fecha_Modificacion:"+fecha);
             linea.println("Creador:"+admin);
             linea.println("Total_Registros:es"+escribir.size());
             linea.println("Registros_Activos:"+_1_);
             linea.println("Registros_Inactivos:"+_2_);
             linea.println("Maximo_Registros:2");
             
             imprimir.close();
             escritor2.close();
             linea.close();
             escritor.close();
             }
             else
             {
             File ComprobarUsuario = new File("C:\\MEIA\\Usuario.txt");
             //Compruevo si existe usuario 
             if(!ComprobarUsuario.exists())
             { 
                 //Crear el archivo usuairo
                 ComprobarUsuario.createNewFile();
                 ArrayList<Usuario> escribir = Obtener_Datos_("C:\\MEIA\\Bitacora.txt","");
                 
                 FileWriter escribirArchivo = new FileWriter(ComprobarUsuario,true);                //Pasar los datos de la bitacora al archivo usuario
                 PrintWriter ImprimirArchivo = new PrintWriter(escribirArchivo,true);
                  if(escribir.contains(user.usuario)){
                 int index = escribir.indexOf(user);
                 escribir.remove(index);
                 escribir.add(index, user);}
          
               for (Usuario item : escribir) 

               { 
    
                   ImprimirArchivo.println(item.usuario+","+ item.nombre+","+item.apellido+","+item.password+","+item.rol+","+item.Fecha_Nacimiento+","+
                           item.correo_electronico+","+item.telefono+","+pathFoto+","+item.Descripcion+","+item.status);
               }
                
                      escritor = new FileWriter(file);
                      imprimir = new PrintWriter(escritor);
                      imprimir.println(TextUsuario.getText()+","+TextNombre.getText()+","+TextApellido.getText()+","+
                     contraseñaCodificada+","+"Usuario"+","+ComboDia.getSelectedItem()+" "+ComboMes.getSelectedItem()+" "+
                     Comboaño.getSelectedItem()+","+TextTelefono.getText()+","+pathFoto+","+TextCorreo.getText()+","+TextDescripcion.getText()+","+"1");
                      escritor.close();
                      imprimir.close();
                      int _1_ = 0;
                      int _2_ = 0;
                      ArrayList<Usuario> escribir_U = Obtener_Datos_("C:\\MEIA\\Usuario.txt","");
                      String admin = "";
                 for (Usuario item : escribir) 
                 {
                     
                if(item.status.equals("1"))
                {
                   _1_++;
               
                }
                else
                {
                    _2_++;
                }
                 }
                 for (Usuario item : escribir_U) 
                 {
                     if(item.rol.equals("Administrador"))
                     {
                         admin = item.usuario;
                     }
                 }
                 //creacion Descriptor
                 File CrearDesc = new File("C:\\MEIA\\Desc_Usuario.txt");
                  FileWriter escritor2 = new FileWriter(CrearDesc);
                  PrintWriter linea = new PrintWriter(escritor2);
             
                  linea.println("Nombre:Usuario.txt");
                  linea.println("ArchivoRelacionado:Bitacora.txt");
                  linea.println("FechaCreacion:"+fecha);
                  linea.println("Creador:"+admin);  //Cambiar esto por el usuario administrador
                  linea.println("Total_Registros:"+escribir.size()); // Agregar la cantidad en la bitacora
                  linea.println("Registros_Activos:"+_1_);  // Buscar los que sean uno en la bitacora
                  linea.println("Registros_Inactivos:"+_2_); // Buscar los que sean cero en la bitacora
             
                  linea.close();
                  escritor2.close();
                   escribirArchivo.close();
                      ImprimirArchivo.close();
                      
                      
               File fileDesc = new File("C:\\MEIA\\Desc_Bitacora.txt");
             FileWriter escritor3 = new FileWriter(fileDesc);
             PrintWriter linea2 = new PrintWriter(escritor3);
             
             linea2.println("Nombre:Bitacora.txt");
             linea2.println("ArchivoRelacionado:Usuario.txt");
             linea2.println("Fecha_Modificacion:"+fecha);
             linea2.println("Creador:"+admin);
             linea2.println("Total_Registros:1");
             linea2.println("Registros_Activos:1");
             linea2.println("Registros_Inactivos:0");
             linea2.println("Maximo_Registros:2");
             
             
             escritor3.close();
             linea2.close();
             

             }
             else{
                  ArrayList<Usuario> escribir = Obtener_Datos_("C:\\MEIA\\Bitacora.txt","");
                  
                 FileWriter escribirArchivo = new FileWriter(ComprobarUsuario,true);                //Pasar los datos de la bitacora al archivo usuario
                 PrintWriter ImprimirArchivo = new PrintWriter(escribirArchivo,true);
                if(escribir.contains(user.usuario)){
                 int index = escribir.indexOf(user);
                 escribir.remove(index);
                 escribir.add(index, user);}
                
               for (Usuario item : escribir) 

               { 
    
                   ImprimirArchivo.println(item.usuario+","+ item.nombre+","+item.apellido+","+item.password+","+item.rol+","+item.Fecha_Nacimiento+","+
                           item.correo_electronico+","+item.telefono+","+item.Descripcion+","+item.status);
               }
                
                      escritor = new FileWriter(file);
                      imprimir = new PrintWriter(escritor);
                      imprimir.println(TextUsuario.getText()+","+TextNombre.getText()+","+TextApellido.getText()+","+
                     contraseñaCodificada+","+"Usuario"+","+ComboDia.getSelectedItem()+" "+ComboMes.getSelectedItem()+" "+
                     Comboaño.getSelectedItem()+","+TextTelefono.getText()+","+pathFoto+","+TextCorreo.getText()+","+TextDescripcion.getText()+","+"1");
                      escritor.close();
                      imprimir.close();
                      escribirArchivo.close();
                      ImprimirArchivo.close();
                      
                      int _1_ = 0;
                      int _2_ = 0;
                      ArrayList<Usuario> escribir_U = Obtener_Datos_("C:\\MEIA\\Usuario.txt","");
                      String admin = "";
                 for (Usuario item : escribir) 
                 {
                     
                if(item.status.equals("1"))
                {
                   _1_++;
               
                }
                else
                {
                    _2_++;
                }
                 }
                 for (Usuario item : escribir_U) 
                 {
                     if(item.rol.equals("Administrador"))
                     {
                         admin = item.usuario;
                     }
                 }
                 //creacion Descriptor
                 File CrearDesc = new File("C:\\MEIA\\Desc_Usuario.txt");
                  FileWriter escritor2 = new FileWriter(CrearDesc,true);
                  PrintWriter linea = new PrintWriter(escritor2);
             
                  linea.println("Nombre:Usuario.txt");
                  linea.println("ArchivoRelacionado:Bitacora.txt");
                  linea.println("FechaCreacion:"+fecha);
                  linea.println("Creador:"+admin);  //Cambiar esto por el usuario administrador
                  linea.println("Total_Registros:"+escribir.size()); // Agregar la cantidad en la bitacora
                  linea.println("Registros_Activos:"+_1_);  // Buscar los que sean uno en la bitacora
                  linea.println("Registros_Inactivos:"+_2_); // Buscar los que sean cero en la bitacora
             
                  linea.close();
                  escritor2.close();
                   escribirArchivo.close();
                      ImprimirArchivo.close();
                      
                      
               File fileDesc = new File("C:\\MEIA\\Desc_Bitacora.txt");
             FileWriter escritor3 = new FileWriter(fileDesc);
             PrintWriter linea2 = new PrintWriter(escritor3);
             
             linea2.println("Nombre:Bitacora.txt");
             linea2.println("ArchivoRelacionado:Usuario.txt");
             linea2.println("Fecha_Modificacion:"+fecha);
             linea2.println("Creador:"+admin);
             linea2.println("Total_Registros:1");
             linea2.println("Registros_Activos:1");
             linea2.println("Registros_Inactivos:0");
             linea2.println("Maximo_Registros:2");
             
             
             escritor3.close();
             linea2.close();
                 //Transferir los datos de la bitacora a usuario
             }
             }
            
         }catch(IOException ex){ex.printStackTrace();}
         
     }
     
     TextUsuario.setText(null);
     TextNombre.setText(null);
     TextApellido.setText(null);
     TextoContraseña.setText(null);
     TextTelefono.setText(null);
     TextCorreo.setText(null);
     TextDescripcion.setText(null);
     }
     
     else{
         
     }
     } catch(IOException ex){ex.printStackTrace();}
   
    Admin cerrar = new Admin();
    cerrar.dispose(); //0o0
// TODO add your handling code here:
    }//GEN-LAST:event_BotonInsertarActionPerformed

    private void TextoContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoContraseñaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser dialogo = new JFileChooser();
        dialogo.setCurrentDirectory(new java.io.File("."));
         dialogo.setDialogTitle("choosertitle");
         dialogo.setFileSelectionMode(JFileChooser.FILES_ONLY);
         //dialogo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
             dialogo.setAcceptAllFileFilterUsed(false);
             if (dialogo.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                 DireccionFotograficaLabel.setText(dialogo.getSelectedFile().getPath()); 
             }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BotonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBackActionPerformed
        VentanaBackUp cambio = new VentanaBackUp();
        cambio.setVisible(true);
    }//GEN-LAST:event_BotonBackActionPerformed

    private void CrearUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearUsActionPerformed
    Insertar llamar = new Insertar();
    llamar.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_CrearUsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Materiales x = new  Materiales();
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BotonDonacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDonacionesActionPerformed
        // TODO add your handling code here:
        Donaciones H = new Donaciones();
        ArchivoSecuencialIndexado F = new ArchivoSecuencialIndexado();
        try {
            F.Inicializar(TextUsuario.getText());
            Materiales J = new Materiales();
            List<String> ListaMateriales = J.BuscarSecuencial();
            for(String X : ListaMateriales){
                H.ComboMateriales.addItem(X);
            }
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        H.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonDonacionesActionPerformed

    private void btnRepMaterialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepMaterialesActionPerformed
        RepMateriales llamar = new RepMateriales();
        llamar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRepMaterialesActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.hide();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
 //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    void Obtener(Ingreso.Usuario Envio) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    void Obtener2(Ingreso.Usuario Envio) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

//    private ArrayList<Usuario> Obtener_Datos(String meiaBitacoratxt, String string) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
//   
    public class Usuario {
    String nombre;
    String usuario;
    String apellido;
    String password;
    String Fecha_Nacimiento;
    String rol;
    String correo_electronico;
    String telefono;
    String path_foto;
    String Descripcion;
    String status;
}
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBack;
    private javax.swing.JButton BotonDonaciones;
    private javax.swing.JButton BotonInsertar;
    private javax.swing.JComboBox<String> ComboDia;
    private javax.swing.JComboBox<String> ComboMes;
    private javax.swing.JComboBox<String> Comboaño;
    private javax.swing.JButton CrearUs;
    private javax.swing.JLabel DireccionFotograficaLabel;
    public javax.swing.JLabel F;
    private javax.swing.JLabel F2;
    private javax.swing.JLabel JFoto;
    private javax.swing.JTextField TextApellido;
    private javax.swing.JTextField TextCorreo;
    private javax.swing.JTextArea TextDescripcion;
    private javax.swing.JTextField TextNombre;
    private javax.swing.JTextField TextTelefono;
    private javax.swing.JTextField TextUsuario;
    private javax.swing.JTextField TextoContraseña;
    private javax.swing.JButton btnRepMateriales;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
